#include<stdio.h>
#include<unistd.h>
int main()
{
  int pipefds1[2],pipefds2[2];
  int returnstatus1,returnstatus2;
  int pid;
  char pipe1writemessage[20]="Hi Child, I am Parent";
  char pipe2writemessage[20]="Hi Parent I am Child";
  char readmessage[20];

  returnstatus1=pipe(pipefds1);

  if(returnstatus1==-1){
    printf("Unable to create pipe 1\n");
    return 1;
  }
  returnstatus2=pipe(pipefds2);

  if(returnstatus2==-1)
  {printf("Unable to create pipe 2\n");
    return 1;}

  pid = fork();
  if(pid!=0) //Parent prices
  {
    close(pipefds1[0]);
    close(pipefds2[1]);
    printf("In Parent : Writing from Pipe 1 - Message is %s\n",pipe1writemessage);
    write(pipefds1[1],pipe1writemessage,sizeof(pipe1writemessage));
    read(pipefds2[0],readmessage,sizeof(readmessage));
    printf("In Child : Reading from Pipe 1 - Message is %s\n",readmessage);
    
  }
  else
  {
    close(pipefds1[1]);
    close(pipefds2[0]);
    printf("In Child : Writing from Pipe 2 = Message is %S\n",pipe2writemessage);
    write(pipefds2[1],pipe2writemessage,sizeof(pipe2writemessage));
    read(pipefds1[0],readmessage,sizeof(readmessage));
    
  }
 return 0;
}